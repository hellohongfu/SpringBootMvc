package hello.controller;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.List;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import hello.model.SysUser;
import hello.model.User;
import hello.qrcode.IQRCodeHelper;
import hello.repository.SysUserRepository;
import hello.repository.UserRepository;
import hello.storage.StorageException;

@Controller
public class UserController {

	@Autowired // This means to get the bean called userRepository
	// Which is auto-generated by Spring, we will use it to handle the data
	private UserRepository userRepository;

	@Autowired
	private IQRCodeHelper qrCodeHelper;


	@Autowired
	private SysUserRepository sysUserRepository;

	@GetMapping("/register")
	public String greetingForm(Model model) {
		model.addAttribute("userModel", new User());
		model.addAttribute("sysUser", new  SysUser());
		model.addAttribute("error", "error");
		return "user/register";
	}

	//@ResponseBody
	@PostMapping("/register")
	public String greetingSubmit(@Valid SysUser sysUser, BindingResult bindingResult,Model model) {

		if(bindingResult.hasErrors()){
            model.addAttribute("error", bindingResult.getFieldError().getDefaultMessage()) ;
        }else{

			SysUser obj=sysUserRepository.findByUsername(sysUser.getUsername());

			if(obj!=null){
				
				model.addAttribute("error","用户名已经注册");

			}else{
				sysUserRepository.save(sysUser);

				//设置qrcode url
				String getUrl =qrCodeHelper.GetQrcodeByValue(sysUser.getId().toString());

				sysUser.setQrCode(getUrl);
				sysUserRepository.save(sysUser);
			}
            
           
		}
		model.addAttribute("sysUser", sysUser);

		return "user/register";
	}

	@PostMapping("/save")
	public String saveUserInfo(@RequestParam("file") MultipartFile file, @ModelAttribute User userModel, Model model) {

		System.out.println(userModel.getEmail().toString());

		Path path = Paths.get("upload-dir");

		// 保存文件
		try {
			if (file.isEmpty()) {
				throw new StorageException("Failed to store empty file " + file.getOriginalFilename());
			}
			Files.copy(file.getInputStream(), path.resolve(file.getOriginalFilename()));
		} catch (IOException e) {
			throw new StorageException("Failed to store file " + file.getOriginalFilename(), e);
		}

		User u = userRepository.queryUserById(userModel.getId());

		u.setName(userModel.getName());
		u.setEmail(userModel.getEmail());
		u.setHeadImg(file.getOriginalFilename());

		userRepository.save(u);

		model.addAttribute("userModel", u);
		return "update";
	}

	@GetMapping("/login")
	public String loginGet(Model model) {

		model.addAttribute("userModel", new User());
		return "user/login";
	}

	@GetMapping("/restetPassword")
	public String resetPassword(Model model) {

		model.addAttribute("userModel", new User());
		return "user/restetPassword";
	}


	// @PostMapping("/login")
	// public String loginGet(@RequestParam(name = "name") String name, @RequestParam(name = "password") String password,
	// 		Model model) {

	// 	List<User> user = userRepository.queryUserByNameAndEmail(name, password);

	// 	if (user.size() > 0) {
	// 		model.addAttribute("userModel", user.get(0));
	// 		model.addAttribute("result", 1);
	// 		return "update";
	// 	} else {
	// 		model.addAttribute("result", 0);
	// 		model.addAttribute("massage", "用户名或者密码错误");
	// 		return "login";

	// 	}
	// }
}
